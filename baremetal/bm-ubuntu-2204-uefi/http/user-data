#cloud-config

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# Ubuntu Server 22.04 LTS
autoinstall:
  version: 1
  apt:
    geoip: true
    disable_components: []
    preserve_sources_list: false
    primary:
      - arches: [amd64]
        uri: https://mirrors.aliyun.com/ubuntu/
      - arches: [default]
        uri: https://mirrors.aliyun.com/ubuntu/
  early-commands:
    - sudo systemctl stop ssh
  locale: en_US
  keyboard:
    layout: gb
  identity:
    hostname: jammy-daily
    username: vmadmin
    password: $6$Da/Bin6we2OOJCVD$HM00JdEP47D.cVfSYzwf71khVHPD8NqbYLGw/iXPswndEqI2TNsMELWRCt0tA2.mVMPjFZlPI0B/xOBO9OhF01
  ssh:
    install-server: true
    allow-pw: true
  storage:
    layout:
      name: direct
    config:
      - type: disk
        id: disk0
        match:
          size: largest
      - type: partition
        id: efi-partition
        device: disk0
        size: 512M
        flag: boot
        grub_device: true
        filesystem: fat32
      - type: partition
        id: root-partition
        device: disk0
        size: -1
  packages:
    - openssh-server
    - cloud-init
    - whois
    - zsh
    - wget
  user-data:
    disable_root: false
    timezone: UTC

  late-commands:
    - sed -i -e 's/^#\?PasswordAuthentication.*/PasswordAuthentication yes/g' /target/etc/ssh/sshd_config
    - sed -i -e 's/^#\?PermitRootLogin.*/PermitRootLogin yes/g' /target/etc/ssh/sshd_config
    - sed -i -e 's/^#\?UseDNS.*/UseDNS no/g' /target/etc/ssh/sshd_config
    - echo 'vmadmin ALL=(ALL) NOPASSWD:ALL' > /target/etc/sudoers.d/vmadmin
    - curtin in-target --target=/target -- chmod 440 /etc/sudoers.d/vmadmin
    - |
      if [ -d /sys/firmware/efi ]; then
        apt-get install -y efibootmgr
        efibootmgr -o $(efibootmgr | perl -n -e '/Boot(.+)\* ubuntu/ && print $1')
      fi
    